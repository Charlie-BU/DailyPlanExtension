const today = new Date();
const todayString = `${today.getFullYear()}年${
    today.getMonth() + 1
}月${today.getDate()}日`;

type MonthPlan = {
    date: string;
    lunar: string;
    plansFinished: string[];
    plansUnfinished: string[];
};

export const constructInitPrompt = (
    extraWords: string,
    allMonthPlans: MonthPlan[],
    isFirstCall: boolean = true
) => {
    let prompt = isFirstCall ? `我的本月计划如下` : ``;
    prompt += `${extraWords}\n请以各条目为键名，生成相应内容纯文本为值，返回json格式方便我解析。\n`;
    if (isFirstCall) {
        // 无需for循环，一定程度提高性能
        prompt += allMonthPlans
            .map(
                (each) =>
                    `日期：${each.date}\n已完成计划：${each.plansFinished}\n未完成计划：${each.plansUnfinished}`
            )
            .join(`\n`);
    }

    return prompt;
};

// 提示词封装为contents对象
export const contents = {
    systemInitPrompt: `你是由计划分析专家、数据科学家和心理学家组成的智能体，负责对用户计划数据进行多维度分析。`,
    test: `你是什么模型？请以json格式回答。`,
    summerizeMonthPlan:
        `请基于本月的全部计划数据，对本月的计划执行情况进行总结，并提供分析和建议。
        json条目包括：
        1. completionRate：本月计划的完成情况，计算完成与未完成的比例，并分析其变化趋势，返回一个对象，包含完成率（百分比）、趋势描述（上升/下降/稳定）、原因分析；\n  
        2. taskCategoryDistribution：本月计划任务的类型分布，如学习、工作、生活、运动等，每类任务所占比例，返回一个数组，数组元素为对象，包含类别名称、占比（百分比）、本月是否有变化；\n  
        3. personalStateMonthly：用户本月的整体状态，包括专注度、动力水平、执行力等，返回一个对象，包含状态描述、波动情况、影响因素（如压力、作息等）；\n  
        4. personalStateRecent：最近 7 天的个人状态，观察是否有显著变化，返回一个对象，包含状态变化趋势、影响因素、优化建议；\n  
        5. timeManagementEfficiency：本月时间管理的表现，分析是否高效利用时间，有无拖延情况，返回一个对象，包含时间管理模式、典型表现、优化建议；\n  
        6. planStability：计划的执行稳定性，观察是否存在周期性高峰低谷，或计划安排是否合理，返回一个对象，包含稳定性描述、主要问题、优化建议；\n  
        7. topAchievements：本月最值得肯定的成就，列出 3 个最重要的完成事项，并分析其意义，返回一个数组，数组元素为对象，包含成就名称、完成日期、影响；\n  
        8. keyChallenges：本月遇到的主要困难，分析影响并给出改进建议，返回一个数组，数组元素为对象，包含挑战描述、影响、如何改进；\n  
        9. summaryAndAdvice：总结本月的整体表现，并针对下个月的计划执行提供 3 条优化建议，返回纯文本；
        `.trim(),
    depictCharacter:
        `请基于全部计划数据，刻画我的个人形象，包括其时间管理习惯、任务完成风格、优势与劣势、学习模式、压力应对方式等，并提供分析和改进建议。  
        json条目包括：  
        1. timeManagementStyle：用户的时间管理风格，如偏向早晨/夜晚高效、喜欢分块时间还是整块专注，返回一个对象，包含风格描述、典型表现、优缺点分析；\n  
        2. taskCompletionPattern：用户的任务完成风格，如喜欢一次性完成/逐步推进、是否容易拖延、偏好独立执行或团队合作，返回一个对象，包含风格描述、典型行为、优化建议；\n  
        3. learningStyle：用户的学习与信息吸收模式，如偏向视觉/听觉/实践型学习，是否习惯总结归纳、碎片化学习等，返回一个对象，包含学习风格描述、体现方式、适合的优化策略；\n  
        4. stressResponse：用户的压力应对模式，如遇到紧迫任务时的典型反应（高效爆发/拖延/逐步适应），是否擅长自我调节，返回一个对象，包含应对模式描述、影响、优化建议；\n  
        5. strengths：用户的优势，基于其计划执行情况总结，返回一个数组，数组元素为对象，包含优势描述、体现方式、如何进一步强化；\n  
        6. weaknesses：用户的劣势或待改进点，分析其影响，并提供具体优化建议，返回一个数组，数组元素为对象，包含劣势描述、影响范围、改进方案；\n  
        7. habitConsistency：用户的习惯养成情况，如是否善于长期坚持计划，是否存在周期性高峰低谷，返回一个对象，包含习惯维持能力分析、常见模式、如何提升稳定性；\n  
        8. personaSummary：综合用户的计划特征，总结其整体个人形象，并提出最重要的优化建议，返回纯文本；
        `.trim(),
    // 条目：计划质量、优先级智能排序、计划分类、计划坚持度
    optimizePlanToday:
        `今天是${todayString}，请综合之前和之后的计划内容对我今天（${todayString}）的计划进行分析（请分析今日所有计划，无需关注已完成或未完成）。
        json条目包括：
        1. planQuality：今日计划是否稍显杂乱无章？如果是，请给予建议（并非优先级，而是计划内容是否合理或欠妥，如何修改）并加以人性化鼓励；如果不是，请加以赞扬；\n
        2. priorityOrder：请给出今日所有计划（已完成和未完成都有）最合理的优先级排序方式，并指出建议用时以及建议在一天中完成的时间段，返回一个数组，，数组元素为对象，包含计划内容、优先级、建议完成时段、建议用时，按计划优先级从高到低排序；\n
        3. classification：分为工作型和休闲型。给出平衡建议：若工作型远多于休闲型，则提醒适时休息，安排休息时间并建议休息内容；若休闲型远多于工作型，则给出相应建议，提醒不要懈怠等；\n
        4. adherence：分析过去坚持的某些计划今日仍有坚持。若有，请给予赞扬；若没有，请适当提醒并给出建议；
        `.trim(),
    proposePlanTomorrow:
        `今天是${todayString}，请根据今天以及之前几天的计划对明天的计划内容做出推荐建议。
        json条目包括：
        1. planList：建议明天的常规计划列表，并指出建议用时以及建议在一天中完成的时间段，返回一个数组，数组元素为对象，包含计划内容、优先级、建议完成时段、建议用时，按计划优先级从高到低排序；\n
        2. unfinishedPlans：今天及近几天来未完成的计划，需要明天留意完成。返回一个数组，数组元素为对象，包含计划内容和相关建议；\n
        3. comments：赞扬近几天来的好习惯以及其他优点，并指出不足与需要改正的点，返回纯文本；
        `.trim(),
    predictMyBehavior:
        `请基于近期及长期的计划数据，预测我的习惯和可能遇到的瓶颈，并针对每一条分别提供相应建议。  
        json条目包括：  
        1. goodHabits：用户形成的良好习惯，分析其带来的积极影响，并鼓励继续保持。返回一个数组，数组元素为对象，包含习惯内容、形成原因、积极影响以及保持建议；\n  
        2. badHabits：用户存在的不良习惯，分析其可能带来的负面影响，并给出改进建议。返回一个数组，数组元素为对象，包含习惯内容、可能影响以及改进建议；\n  
        3. bottlenecks：用户在计划执行中的瓶颈或挑战，分析其原因，并提供针对性的优化策略。返回一个数组，数组元素为对象，包含瓶颈内容、影响范围、可能原因以及改进建议；\n  
        4. comments：对用户的进步和整体计划习惯进行总结性评价，既要鼓励优点，也要指出仍有提升空间的方面。返回纯文本；
        `.trim(),
    seekOldPlans:
        `请基于历史计划数据，寻找曾经坚持较久但最近未坚持的计划，并针对每一条提供分析和建议。  
        json条目包括：  
        1. droppedPlans：曾经坚持较长时间但最近未继续的计划列表，分析其重要性、可能的中断原因，并提出是否需要恢复的建议。返回一个数组，数组元素为对象，包含计划内容、坚持时长、最近中断时间、中断可能原因、恢复建议；\n  
        2. priorityRecovery：从中筛选出最值得优先恢复的计划，结合用户的长期目标或习惯养成，提出理由和行动方案。返回一个数组，数组元素为对象，包含计划内容、优先恢复理由、具体恢复建议；\n  
        3. comments：对用户计划坚持情况的总体评价，包括鼓励用户保持的习惯以及对容易中断计划的改进建议。返回纯文本；
        `.trim(),
};
